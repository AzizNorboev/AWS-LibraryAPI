name: CI/CD

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  IMAGE_NAME: libraryapi

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup .NET 6 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: libraryapi
          IMAGE_TAG: v1
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 105319023386.dkr.ecr.us-east-1.amazonaws.com
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: SSH into EC2 instance and deploy Docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_INSTANCE_IP }}
          username: ec2-user
          key: ${{ secrets.DEPLOYMENT_KEY }}
          port: 22
          script: |
            service docker start
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 105319023386.dkr.ecr.us-east-1.amazonaws.com
            docker stop webserver || true
            docker rm webserver || true
            docker pull 105319023386.dkr.ecr.us-east-1.amazonaws.com/libraryapi:v1
            docker run -d --rm --name webserver -p 5000:5000 -p 5001:5001 -e ASPNETCORE_HTTP_PORT=https://+:5001 -e ASPNETCORE_URLS=http://+:5000 105319023386.dkr.ecr.us-east-1.amazonaws.com/libraryapi:v1
      #- name: Deploy app on EC2 instance
      #   env:
      #    SSH_PRIVATE_KEY: ${{ secrets.DEPLOYMENT_KEY }}
      #    EC2_INSTANCE_IP: ${{ secrets.EC2_INSTANCE_IP }}
      #   ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #  run: |
      #    ssh -i $SSH_PRIVATE_KEY ec2-user@$EC2_INSTANCE_IP "docker stop $ECR_REPOSITORY || true && docker rm $ECR_REPOSITORY || true"
      #    ssh -i $SSH_PRIVATE_KEY ec2-user@$EC2_INSTANCE_IP "docker pull $ECR_REGISTRY/$ECR_REPOSITORY"
      #    ssh -i $SSH_PRIVATE_KEY ec2-user@$EC2_INSTANCE_IP "docker run -d --name $ECR_REPOSITORY -p 80:80 $ECR_REGISTRY/$ECR_REPOSITORY"
